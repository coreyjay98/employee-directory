{"version":3,"sources":["logo.svg","Employee.js","resultFilter.js","EmployeeTable.js","SelectForm.js","App.js","reportWebVitals.js","index.js"],"names":["Employee","word","employee","src","picture","thumbnail","alt","name","title","first","last","dob","age","gender","charAt","toUpperCase","slice","location","country","resultFilter","employeeList","filter","console","log","results","sort","a","b","EmployeeTable","useState","sortedList","setSortedList","tableFilter","setTableFilter","useEffect","res","map","login","md5","SelectForm","setEmployeeList","sorter","setSorter","fetch","json","callRes","fetchData","className","aria-label","onChange","e","target","value","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9395b580.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Employee = ({ employee }) => {\n  const capitalizer = (word) => {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  };\n\n  return (\n    <tr>\n      <td>\n        <img src={employee.picture.thumbnail} alt=\"Employee Picture\"></img>\n      </td>\n      <td>{employee.name.title}</td>\n      <td>{employee.name.first}</td>\n      <td>{employee.name.last}</td>\n      <td>{employee.dob.age}</td>\n      <td>{capitalizer(employee.gender)}</td>\n      <td>{employee.location.country}</td>\n    </tr>\n  );\n};\n\nexport default Employee;\n","const resultFilter = (employeeList, filter) => {\n  console.log('fuilly', filter);\n  if (filter == 'nameAZ') {\n    const sortAZ = employeeList.results.slice(0).sort(function (a, b) {\n      if (a.name.first < b.name.first) {\n        return -1;\n      }\n      if (a.name.first > b.name.first) {\n        return 1;\n      }\n      return 0;\n    });\n    return sortAZ;\n  } else if (filter == 'nameZA') {\n    const sortZA = employeeList.results.slice(0).sort(function (a, b) {\n      if (a.name.first > b.name.first) {\n        return -1;\n      }\n      if (a.name.first < b.name.first) {\n        return 1;\n      }\n      return 0;\n    });\n    return sortZA;\n  } else if (filter == 'male') {\n    const maleSort = employeeList.results.filter(\n      ({ gender }) => gender == 'male'\n    );\n    return maleSort;\n  } else if (filter == 'female') {\n    const femaleSort = employeeList.results.filter(\n      ({ gender }) => gender == 'female'\n    );\n    return femaleSort;\n  } else return employeeList.results;\n};\nexport default resultFilter;\n","import { useEffect, useState } from 'react';\nimport Employee from './Employee';\nimport resultFilter from './resultFilter';\n\nconst EmployeeTable = ({ employeeList, filter }) => {\n  const [sortedList, setSortedList] = useState([]);\n  const [tableFilter, setTableFilter] = useState(filter);\n\n  useEffect(() => {\n    setTableFilter(filter);\n  }, [filter]);\n\n  useEffect(() => {\n    const res = resultFilter(employeeList, tableFilter);\n    setSortedList(res);\n  }, [tableFilter, filter]);\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Picture</th>\n          <th>Title</th>\n          <th>First name</th>\n          <th>Last name</th>\n          <th>Age</th>\n          <th>Gender</th>\n          <th>Location</th>\n        </tr>\n      </thead>\n      <tbody>\n        {sortedList.map((employee) => (\n          <Employee employee={employee} key={employee.login.md5} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\nexport default EmployeeTable;\n","import { useState, useEffect } from 'react';\nimport EmployeeTable from './EmployeeTable';\n\nconst SelectForm = () => {\n  const [employeeList, setEmployeeList] = useState({ results: [] });\n  const [sorter, setSorter] = useState('default');\n  useEffect(async () => {\n    async function fetchData() {\n      const res = await fetch('https://randomuser.me/api/?results=20');\n      const callRes = await res.json();\n      setEmployeeList({ results: callRes.results });\n    }\n    fetchData();\n  }, []);\n\n  const sortSelection = (e) => {\n    setSorter(e.target.value);\n  };\n\n  useState(() => {}, [sorter]);\n\n  return (\n    <div>\n      <select\n        className=\"form-select\"\n        aria-label=\"Default select example\"\n        onChange={sortSelection}\n      >\n        <option>Filter/Sort</option>\n        <option value=\"nameAZ\">Name A-Z</option>\n        <option value=\"nameZA\">Name Z-A</option>\n        <option value=\"male\">Male</option>\n        <option value=\"female\">Female</option>\n      </select>\n      {employeeList.results.length > 1 ? (\n        <EmployeeTable employeeList={employeeList} filter={sorter} />\n      ) : (\n        <h1>Fetching Employees ...</h1>\n      )}\n    </div>\n  );\n};\nexport default SelectForm;\n","import logo from './logo.svg';\nimport './App.css';\nimport SelectForm from './SelectForm';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <h1>Employee Directory</h1>\n      <SelectForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}